{"generatedAt":1707080710454,"generateTime":6,"contents":[{"_path":"/author/cptwesley","_dir":"author","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"Wesley Baartman","description":"Hi! My name is Wesley Baartman, also known online as CptWesley. I'm a software engineer who graduated with a Master's degree in Computer Science from the Delft University of Technology in the Netherlands. I have a passion for anything related to programming language design, software quality and transfering my knowledge to others. I'm a strong believer of the philosophy which can be captured by a famous quote contributed to physicist Richard Feynman: What I cannot create, I do not understand. As a consequence, one of my favourite pasttime activities is reinventing the wheel by implementing libraries that already exist in order to better understand how they actually work.","excerpt":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hi! My name is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Wesley Baartman"}]},{"type":"text","value":", also known online as "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"CptWesley"}]},{"type":"text","value":". I'm a software engineer who graduated with a Master's degree in Computer Science from the Delft University of Technology in the Netherlands. I have a passion for anything related to programming language design, software quality and transfering my knowledge to others. I'm a strong believer of the philosophy which can be captured by a famous quote contributed to physicist Richard Feynman: "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"What I cannot create, I do not understand"}]},{"type":"text","value":". As a consequence, one of my favourite pasttime activities is reinventing the wheel by implementing libraries that already exist in order to better understand how they actually work."}]}]},"avatar":"https://avatars.githubusercontent.com/u/9980136","color":"red","letters":"WB","github":"https://github.com/CptWesley","linkedin":"https://www.linkedin.com/in/wesleybaartman/","steam":"https://steamcommunity.com/id/cptwesley/","nuget":"https://www.nuget.org/profiles/CptWesley","body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Hi! My name is "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Wesley Baartman"}]},{"type":"text","value":", also known online as "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"CptWesley"}]},{"type":"text","value":". I'm a software engineer who graduated with a Master's degree in Computer Science from the Delft University of Technology in the Netherlands. I have a passion for anything related to programming language design, software quality and transfering my knowledge to others. I'm a strong believer of the philosophy which can be captured by a famous quote contributed to physicist Richard Feynman: "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"What I cannot create, I do not understand"}]},{"type":"text","value":". As a consequence, one of my favourite pasttime activities is reinventing the wheel by implementing libraries that already exist in order to better understand how they actually work."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:author:cptwesley.md","_source":"content","_file":"author/cptwesley.md","_extension":"md"},{"_path":"/post/living-with-null-in-dotnet","_dir":"post","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"Living with null in .NET","description":"If you ever did a Google (or Bing) search about null, you might have come across some articles describing why we should stop using null, why null is the worst mistake in computer science, why null is bad, why null is evil and why we shouldn't use null, because it's evil. These articles might provide you with a subtle hint that this extremely common 4 letter word, which exists in most programming languages, is perhaps more dangerous than it originally seemed to be. If the sarcasm wasn't clear: null can indeed be quite dangerous and many language designers are probably regretting the choice to include it in their language.","author":"cptwesley","date":"2023-03-19T20:00:00Z","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"living-with-null-in-net"},"children":[{"type":"text","value":"Living with null in .NET"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If you ever did a Google (or Bing) search about "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"null"}]},{"type":"text","value":", you might have come across some articles describing why "},{"type":"element","tag":"a","props":{"href":"https://medium.com/swlh/we-need-to-stop-using-null-heres-why-c56ff3ac72dd","rel":["nofollow"]},"children":[{"type":"text","value":"we should stop using null"}]},{"type":"text","value":", why "},{"type":"element","tag":"a","props":{"href":"https://www.lucidchart.com/techblog/2015/08/31/the-worst-mistake-of-computer-science/","rel":["nofollow"]},"children":[{"type":"text","value":"null is the worst mistake in computer science"}]},{"type":"text","value":", why "},{"type":"element","tag":"a","props":{"href":"https://dev.to/mbernard/why-null-in-c-is-so-bad-cid","rel":["nofollow"]},"children":[{"type":"text","value":"null is bad"}]},{"type":"text","value":", why "},{"type":"element","tag":"a","props":{"href":"https://blog.ndepend.com/null-evil/","rel":["nofollow"]},"children":[{"type":"text","value":"null is evil"}]},{"type":"text","value":" and why "},{"type":"element","tag":"a","props":{"href":"https://the-null-log.org/post/176008930669/dont-use-null-null-is-evil","rel":["nofollow"]},"children":[{"type":"text","value":"we shouldn't use null, because it's evil"}]},{"type":"text","value":". These articles might provide you with a subtle hint that this extremely common 4 letter word, which exists in most programming languages, is perhaps more dangerous than it originally seemed to be. If the sarcasm wasn't clear: "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" can indeed be quite dangerous and many language designers are probably regretting the choice to include it in their language."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Instead of writing another article on why "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" should be avoided, or providing you an overview of what programming languages you can use to avoid the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" situation altogether, I decided to focus on what steps we can take to limit the potential dangers of "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" in my favourite programming language: C#."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's start with a simple example of method that has some hidden danger:"}]},{"type":"element","tag":"code","props":{"code":"private Foo foo;\n\n// ...\n\npublic override string ToString() {\n  return foo.ToString();\n}\n","language":"cs","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"private"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-55e17e"},"children":[{"type":"text","value":"Foo"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-c70a8c"},"children":[{"type":"text","value":"foo"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":";"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-f27fc0"},"children":[{"type":"text","value":"// ..."}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"public"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"override"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"string"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-a5237d"},"children":[{"type":"text","value":"ToString"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"() {"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-34a970"},"children":[{"type":"text","value":"return"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-c70a8c"},"children":[{"type":"text","value":"foo"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"."}]},{"type":"element","tag":"span","props":{"class":"ct-a5237d"},"children":[{"type":"text","value":"ToString"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"();"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"}"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If the field "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"foo"}]},{"type":"text","value":" is not instantiated to a non-"},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" value, we will encounter a nasty "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NullReferenceException"}]},{"type":"text","value":" when we execute this function. We usually expect "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"ToString"}]},{"type":"text","value":" to be able to return without crashing regardless of the state of the object. Thus this behaviour is not desirable."}]},{"type":"element","tag":"h2","props":{"id":"null-state-analysis"},"children":[{"type":"text","value":"Null-state analysis"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Thankfully, C# language version 8 (released together with .NET Core 3 in 2019) introduced so-called "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"null-state analysis"}]},{"type":"text","value":". This form of static analysis allows partial automatic detection of locations in the code where potential "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"NullReferenceException"}]},{"type":"text","value":"s could occur during run-time. Enabling this feature is as simple as adding the following to the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"PropertyGroup"}]},{"type":"text","value":" inside your "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".csproj"}]},{"type":"text","value":" project file:"}]},{"type":"element","tag":"code","props":{"code":"<Nullable>enable</Nullable>\n","language":"xml","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"Nullable"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":">"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"enable"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":"</"}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"Nullable"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":">"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"An example of a fully configured "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":".csproj"}]},{"type":"text","value":" is given below:"}]},{"type":"element","tag":"code","props":{"code":"<Project Sdk=\"Microsoft.NET.Sdk\">\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n</Project>\n","language":"xml","meta":null},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"Project"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-c70a8c"},"children":[{"type":"text","value":"Sdk"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"="}]},{"type":"element","tag":"span","props":{"class":"ct-3d50ae"},"children":[{"type":"text","value":"\"Microsoft.NET.Sdk\""}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":">"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"PropertyGroup"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":">"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"OutputType"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":">"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"Exe"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":"</"}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"OutputType"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":">"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"TargetFramework"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":">"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"net7.0"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":"</"}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"TargetFramework"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":">"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"    "}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":"<"}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"Nullable"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":">"}]},{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"enable"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":"</"}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"Nullable"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":">"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-974ba8"},"children":[{"type":"text","value":"  "}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":"</"}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"PropertyGroup"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":">"}]}]},{"type":"element","tag":"div","props":{"class":"line"},"children":[{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":"</"}]},{"type":"element","tag":"span","props":{"class":"ct-e1bc3e"},"children":[{"type":"text","value":"Project"}]},{"type":"element","tag":"span","props":{"class":"ct-05772d"},"children":[{"type":"text","value":">"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It must be noted that using this feature requires C# language version 8 to be used in your project. This is automatically the case for any project targeting .NET Core 3.0 or any newer version of .NET. For more information about how to use modern C# language features, while still targeting older .NET versions, have a look "},{"type":"element","tag":"a","props":{"href":"/post/using-modern-csharp-features-in-older-targets"},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Having enabled this feature"}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-3d50ae{color:#CE9178}\n.ct-05772d{color:#808080}\n.ct-34a970{color:#C586C0}\n.ct-a5237d{color:#DCDCAA}\n.ct-f27fc0{color:#6A9955}\n.ct-c70a8c{color:#9CDCFE}\n.ct-55e17e{color:#4EC9B0}\n.ct-974ba8{color:#D4D4D4}\n.ct-e1bc3e{color:#569CD6}"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"null-state-analysis","depth":2,"text":"Null-state analysis"}]}},"_type":"markdown","_id":"content:post:living-with-null-in-dotnet.md","_source":"content","_file":"post/living-with-null-in-dotnet.md","_extension":"md"},{"_path":"/post/using-modern-csharp-features-in-older-targets","_dir":"post","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"Using modern C# features in older target frameworks","description":"This post is not yet finished.","author":"cptwesley","date":"2023-03-20T20:00:00Z","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"using-modern-c-features-in-older-target-frameworks"},"children":[{"type":"text","value":"Using modern C# features in older target frameworks"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This post is not yet finished."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:post:using-modern-csharp-features-in-older-targets.md","_source":"content","_file":"post/using-modern-csharp-features-in-older-targets.md","_extension":"md"},{"_path":"/post/welcome","_dir":"post","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"Welcome","description":"meta description of the page","author":"cptwesley","date":"2023-03-19T15:13:00Z","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"welcome"},"children":[{"type":"text","value":"Welcome"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Welcome to my blog! Here, I blabber on about all kinds of software engineering/development things (mostly C# and .NET). I offer up my opinionated takes on various topics. Most of my posts will focus on code quality and testing. Providing tips and tricks to write (in my opinion) cleaner and (hopefully) safer code. Feel free to take everything I say with a grain of salt, it's only my personal opinion."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"You can read more about me by clicking "},{"type":"element","tag":"a","props":{"href":"/author/cptwesley"},"children":[{"type":"text","value":"here"}]},{"type":"text","value":" or go straight to the list of blog posts by clicking "},{"type":"element","tag":"a","props":{"href":"/posts"},"children":[{"type":"text","value":"here"}]},{"type":"text","value":"."}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[]}},"_type":"markdown","_id":"content:post:welcome.md","_source":"content","_file":"post/welcome.md","_extension":"md"}],"navigation":[{"title":"Author","_path":"/author","children":[{"title":"Wesley Baartman","_path":"/author/cptwesley"}]},{"title":"Post","_path":"/post","children":[{"title":"Living with null in .NET","_path":"/post/living-with-null-in-dotnet"},{"title":"Using modern C# features in older target frameworks","_path":"/post/using-modern-csharp-features-in-older-targets"},{"title":"Welcome","_path":"/post/welcome"}]}]}